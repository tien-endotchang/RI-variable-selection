geom_line(lwd=0.5, color="black", linetype=3, aes(x,x)) +
geom_line(lwd=1) + geom_point(pch=19) +
theme_bw() + theme(legend.just=c(1,0), legend.pos=c(0.95,0.05)) +
scale_colour_manual(values = cbbPalette)
ggsave("fig/df2_snr6.pdf", height=4, width=6, device="pdf")
ggsave("fig/df2_snr6.pdf", height=4, width=6, device="pdf")
rm(list=ls())
library(ggplot2)
library(ggh4x)
load_simulation_data = function(n, p, type.vec, rho.vec, snr.vec, sim.type, metric=c("minsize","prop")){
if(n==100 & p==10){
problem = "lo"
}else if(n==500 & p==100){
problem = "med"
}else if(n==50 & p==1000){
problem = "hi5"
}else{
problem = "hi10"
}
stem = paste0("sim.n",n,".p",p)
foldername = paste0("rds/", sim.type, ".Select/",problem,"/")
yvecs = beta.vecs = rho.vecs = snr.vecs = method.vecs = c()
for (beta.type in type.vec) {
for (rho in rho.vec) {
name = paste0(stem, ".beta", beta.type, sprintf(".rho%0.2f", rho))
for (snr in snr.vec) {
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
if(metric == "minsize"){
nrep = length(sim.obj$minsize$CRI)
yvecs = c(yvecs,
unlist(sim.obj$minsize, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$minsize)))
rho.vecs = c(rho.vecs,
rep(sim.obj$rho, nrep*length(sim.obj$minsize)))
snr.vecs = c(snr.vecs,
rep(sim.obj$snr, nrep*length(sim.obj$minsize)))
method.vecs = c(method.vecs,
rep(names(sim.obj$minsize), each=nrep))
}else{
yvecs = c(yvecs,
as.vector(sapply(sim.obj$prop, colMeans)))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, p*length(sim.obj$prop)))
rho.vecs = c(rho.vecs,
rep(sim.obj$rho, p*length(sim.obj$prop)))
snr.vecs = c(snr.vecs,
rep(sim.obj$snr, p*length(sim.obj$prop)))
method.vecs = c(method.vecs,
rep(names(sim.obj$prop), each=p))
}
}
}
}
beta.vecs = factor(beta.vecs)
rho.vecs = factor(rho.vecs)
snr.vecs = factor(round(snr.vecs, 2))
levels(beta.vecs) = paste("Example", levels(beta.vecs))
levels(rho.vecs) = paste("Correlation", levels(rho.vecs))
levels(snr.vecs) = paste("SNR", levels(snr.vecs))
xvec = rep(1:p, length(type.vec)*length(rho.vec)*length(snr.vec)*length(sim.obj$prop))
res = data.frame(xvec=xvec, yvec=yvecs, beta=beta.vecs, rho=rho.vecs, snr=snr.vecs,
method=factor(method.vecs, levels=c("GD","CRI","CRI.Z","CAR","SIS")))
return( res )
}
plot_simulation = function(data, title, n, p, metric){
cbbPalette = c("GD" = "#00000090",
"CRI" = "#FF000090",
"CRI.Z" = "#0000FF90",
"CAR" = "#3399FF90",
"SIS" = "#FF990090"
)
legend.pos = "bottom"
if(metric=="minsize"){
gp = ggplot(data = data, aes(x = method, y = yvec, fill = method)) + # x = variable
geom_boxplot() + ylab(switch(metric, minsize="Minimal Model Size (S)",
prop="Selected Proprotion (Pr(k))")) +
facet_nested(beta ~ rho + snr) +
scale_fill_manual(values = cbbPalette) +
theme_bw() + theme(legend.position=legend.pos,
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.x=element_blank()) +
ggtitle(title)
if(p > n){
gp = gp + scale_y_continuous(trans='log10')
}
}else{
if(p>10) xlim = c(0,50) else xlim = c(0,p)
gp = ggplot(data = data, aes(x = xvec, y = yvec)) + # x = variable
geom_line(aes(color = method, linetype = method), linewidth=0.75) +
facet_nested(beta ~ rho + snr) +
scale_color_manual(values = cbbPalette) +
theme_bw() + theme(legend.position=legend.pos) +
ggtitle(title) + coord_cartesian(xlim=xlim) +
xlab("Number of selected predictors k") + ylab(switch(metric, minsize="Minimal Model Size S",
prop="Selected Proprotion Pr(k)"))
if(p==10){
gp = gp + scale_x_continuous(breaks=c(1, 5, 10))
}else{
gp = gp + scale_x_continuous(breaks=c(1, 25, 50))
}
}
return( gp )
}
# Subset
type.vec = c(1:3)
rho.vec = c(0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=4))
SIM.TYPE = "FL"
w=12 # 12
h=6  # 6
fig_dir = sprintf("fig/%s.Select/", SIM.TYPE)
problem = "low"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE, "minsize")
dat = dat[dat$method != "CAR", ]
sim.type="HTT"
problem="lo"
foldername = paste0("rds/", sim.type, ".Select/",problem,"/")
n=100
p=10
stem = paste0("sim.n",n,".p",p)
beta.type=1
rho=0.35
name = paste0(stem, ".beta", beta.type, sprintf(".rho%0.2f", rho))
snr=6
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
length(sim.obj$runtime$CRI)
load_simulation_data = function(n, p, type.vec, rho.vec, snr.vec, sim.type, select=FALSE){
if(n==100 & p==10){
problem = "lo"
}else if(n==500 & p==100){
problem = "med"
}else if(n==50 & p==1000){
problem = "hi5"
}else{
problem = "hi10"
}
stem = paste0("sim.n",n,".p",p)
if(select) foldername = paste0("rds/", sim.type, ".Select/",problem,"/")
else foldername = paste0("rds/", sim.type, "/",problem,"/")
yvecs = beta.vecs = rho.vecs = snr.vecs = method.vecs = c()
for (beta.type in type.vec) {
for (rho in rho.vec) {
name = paste0(stem, ".beta", beta.type, sprintf(".rho%0.2f", rho))
for (snr in snr.vec) {
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
nrep = length(sim.obj$runtime$CRI)
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$runtime)))
rho.vecs = c(rho.vecs,
rep(sim.obj$rho, nrep*length(sim.obj$runtime)))
snr.vecs = c(snr.vecs,
rep(sim.obj$snr, nrep*length(sim.obj$runtime)))
method.vecs = c(method.vecs,
rep(names(sim.obj$runtime), each=nrep))
}
}
}
beta.vecs = factor(beta.vecs)
rho.vecs = factor(rho.vecs)
snr.vecs = factor(round(snr.vecs, 2))
levels(beta.vecs) = paste("Example", levels(beta.vecs))
levels(rho.vecs) = paste("Correlation", levels(rho.vecs))
levels(snr.vecs) = paste("SNR", levels(snr.vecs))
xvec = rep(1:p, length(type.vec)*length(rho.vec)*length(snr.vec)*length(sim.obj$prop))
res = data.frame(xvec=xvec, yvec=yvecs, beta=beta.vecs, rho=rho.vecs, snr=snr.vecs,
method=factor(method.vecs, levels=c("GD","CRI","CRI.Z","CAR","SIS")))
return( res )
}
# Subset
type.vec = c(1:3)
rho.vec = c(0,0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=10))
SIM.TYPE = "HTT"
w=12 # 12
h=6  # 6
fig_dir = sprintf("fig/%s.Select/", SIM.TYPE)
problem = "low"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
nrep = length(sim.obj$runtime$CRI)
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
yvecs = beta.vecs = rho.vecs = snr.vecs = method.vecs = c()
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$runtime)))
rho.vecs = c(rho.vecs,
rep(sim.obj$rho, nrep*length(sim.obj$runtime)))
snr.vecs = c(snr.vecs,
rep(sim.obj$snr, nrep*length(sim.obj$runtime)))
method.vecs = c(method.vecs,
rep(names(sim.obj$runtime), each=nrep))
View(sim.obj)
beta.vecs
sim.obj$beta.type
nrep
length(sim.obj$runtime)
sim.obj$runtime
SIM.TYPE = "HTT"
select=FALSE
foldername
foldername = paste0("rds/", sim.type, "/",problem,"/")
foldername
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
nrep = length(sim.obj$runtime$CRI)
problem
problem = "lo"
foldername = paste0("rds/", sim.type, "/",problem,"/")
name = paste0(stem, ".beta", beta.type, sprintf(".rho%0.2f", rho))
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
nrep = length(sim.obj$runtime$CRI)
sim.obj$runtime
nrep = length(sim.obj$runtime[[1]])
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$runtime)))
names(sim.obj$runtime)
nrep = length(sim.obj$runtime[[1]])
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$runtime)))
yvecs = beta.vecs = rho.vecs = snr.vecs = method.vecs = c()
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
nrep = length(sim.obj$runtime[[1]])
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$runtime)))
rho.vecs = c(rho.vecs,
rep(sim.obj$rho, nrep*length(sim.obj$runtime)))
snr.vecs = c(snr.vecs,
rep(sim.obj$snr, nrep*length(sim.obj$runtime)))
method.vecs = c(method.vecs,
rep(names(sim.obj$runtime), each=nrep))
beta.vecs = factor(beta.vecs)
rho.vecs = factor(rho.vecs)
snr.vecs = factor(round(snr.vecs, 2))
levels(beta.vecs) = paste("Example", levels(beta.vecs))
levels(rho.vecs) = paste("Correlation", levels(rho.vecs))
levels(snr.vecs) = paste("SNR", levels(snr.vecs))
# xvec = rep(1:p, length(type.vec)*length(rho.vec)*length(snr.vec)*length(sim.obj$prop))
res = data.frame(xvec=xvec, yvec=yvecs, beta=beta.vecs, rho=rho.vecs, snr=snr.vecs,
method=factor(method.vecs, levels=names(sim.obj$runtime)))
# xvec = rep(1:p, length(type.vec)*length(rho.vec)*length(snr.vec)*length(sim.obj$prop))
res = data.frame(yvec=yvecs, beta=beta.vecs, rho=rho.vecs, snr=snr.vecs,
method=factor(method.vecs, levels=names(sim.obj$runtime)))
res
rm(list=ls())
library(ggplot2)
library(ggh4x)
load_simulation_data = function(n, p, type.vec, rho.vec, snr.vec, sim.type){
if(n==100 & p==10){
problem = "lo"
}else if(n==500 & p==100){
problem = "med"
}else if(n==50 & p==1000){
problem = "hi5"
}else{
problem = "hi10"
}
stem = paste0("sim.n",n,".p",p)
if(sim.type=="HTT") select=FALSE
else select=TRUE
if(select) foldername = paste0("rds/", sim.type, ".Select/",problem,"/")
else foldername = paste0("rds/", sim.type, "/",problem,"/")
yvecs = beta.vecs = rho.vecs = snr.vecs = method.vecs = c()
for (beta.type in type.vec) {
for (rho in rho.vec) {
name = paste0(stem, ".beta", beta.type, sprintf(".rho%0.2f", rho))
for (snr in snr.vec) {
file = paste0(foldername, name, ".snr", round(snr,2), ".rds")
sim.obj = readRDS(file)
nrep = length(sim.obj$runtime[[1]])
yvecs = c(yvecs,
unlist(sim.obj$runtime, use.names = F))
beta.vecs = c(beta.vecs,
rep(sim.obj$beta.type, nrep*length(sim.obj$runtime)))
rho.vecs = c(rho.vecs,
rep(sim.obj$rho, nrep*length(sim.obj$runtime)))
snr.vecs = c(snr.vecs,
rep(sim.obj$snr, nrep*length(sim.obj$runtime)))
method.vecs = c(method.vecs,
rep(names(sim.obj$runtime), each=nrep))
}
}
}
beta.vecs = factor(beta.vecs)
rho.vecs = factor(rho.vecs)
snr.vecs = factor(round(snr.vecs, 2))
levels(beta.vecs) = paste("Example", levels(beta.vecs))
levels(rho.vecs) = paste("Correlation", levels(rho.vecs))
levels(snr.vecs) = paste("SNR", levels(snr.vecs))
# xvec = rep(1:p, length(type.vec)*length(rho.vec)*length(snr.vec)*length(sim.obj$prop))
res = data.frame(yvec=yvecs, beta=beta.vecs, rho=rho.vecs, snr=snr.vecs,
method=factor(method.vecs, levels=names(sim.obj$runtime)))
return( res )
}
# Subset
type.vec = c(1:3)
rho.vec = c(0,0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=10))
SIM.TYPE = "HTT"
w=12 # 12
h=6  # 6
problem = "low"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
View(dat)
54000/15
30*3*4*10
dat[dat$method=="Best Subset",]$yvec
dat[dat$method=="Best subset",]$yvec
boxplot(dat[dat$method=="Best subset",]$yvec)
boxplot(dat[dat$method=="Best subset",]$yvec, dat[dat$method=="Forward stepwise",]$yvec)
library(dplyr)
dat %>% group_by(method)
dat %>% group_by(method)%>% summarise(mean = mean())
dat %>% group_by(method)%>% summarise(mean = mean(x))
dat %>% group_by(method)%>% summarise(mean = mean(y_vec))
dat %>% group_by(method)%>% summarise(mean = mean(yvec))
dat %>% group_by(method)%>% summarise(mean = mean(yvec), sd = sd(yvec))
dat[dat$method=="Forward stepwise",]$yvec
mean(dat[dat$method=="Forward stepwise",]$yvec)
sd(dat[dat$method=="Forward stepwise",]$yvec)
dat %>% group_by(method)%>% summarise(mean = mean(yvec), sd = sd(yvec))
dat %>% group_by(method)%>% summarise(mean = mean(yvec))
problem = "med"
n = 500; p = 100
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
dat %>% group_by(method)%>% summarise(mean = mean(yvec))
dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4))
problem = "hi5"
n = 50; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4))
problem = "hi10"
n = 100; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4))
(dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))[, 2]
(dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
table.partI = matrix(0, nrow=4, ncol=15)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
table.partI
colnames(table.partI) = c("Best subset","Lasso","Forward stepwise",
"Relaxed lasso",
"LS-GD","LS-CRI","LS-CRI.Z","LS-SIS",
"Ridge-GD","Ridge-CRI","Ridge-CRI.Z","Ridge-SIS")
colnames(table.partI)
colnames(table.partI) = c("Best subset","Lasso","Forward stepwise",
"Relaxed lasso","RELAXED lasso",
"LS-GD","LS-CRI","LS-CRI.Z","LS-CAR","LS-SIS",
"Ridge-GD","Ridge-CRI","Ridge-CRI.Z","Ridge-CAR","Ridge-SIS")
# Part II
type.vec = c(1:3)
rho.vec = c(0,0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=10))
SIM.TYPE = "HTT"
table.partI = matrix(0, nrow=4, ncol=15)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("Best subset","Lasso","Forward stepwise",
"Relaxed lasso","RELAXED lasso",
"LS-GD","LS-CRI","LS-CRI.Z","LS-CAR","LS-SIS",
"Ridge-GD","Ridge-CRI","Ridge-CRI.Z","Ridge-CAR","Ridge-SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "med"
n = 500; p = 100
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "hi5"
n = 50; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "hi10"
n = 100; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
table.partI
table.partI = matrix(NA, nrow=4, ncol=15)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("Best subset","Lasso","Forward stepwise",
"Relaxed lasso","RELAXED lasso",
"LS-GD","LS-CRI","LS-CRI.Z","LS-CAR","LS-SIS",
"Ridge-GD","Ridge-CRI","Ridge-CRI.Z","Ridge-CAR","Ridge-SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "med"
n = 500; p = 100
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[2, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "hi5"
n = 50; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[3, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "hi10"
n = 100; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[4, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
table.partI
type.vec = c(1:3)
rho.vec = c(0,0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=10))
SIM.TYPE = "FL"
table.partII = matrix(NA, nrow=4, ncol=5)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("GD","CRI","CRI.Z","CAR","SIS")
table.partI = matrix(NA, nrow=4, ncol=5)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("GD","CRI","CRI.Z","CAR","SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
rho.vec = c(0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=10))
SIM.TYPE = "FL"
table.partI = matrix(NA, nrow=4, ncol=5)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("GD","CRI","CRI.Z","CAR","SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
type.vec = c(1:3)
rho.vec = c(0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=4))
SIM.TYPE = "FL"
table.partI = matrix(NA, nrow=4, ncol=5)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("GD","CRI","CRI.Z","CAR","SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
(dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))
table.partI = matrix(NA, nrow=4, ncol=5)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("GD","CRI","CRI.Z","CAR","SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "med"
n = 500; p = 100
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[2, c(2:5, 7:10, 12:15)] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "med"
n = 500; p = 100
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[2, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
(dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
(dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))
type.vec = c(1:3)
rho.vec = c(0.35,0.7,0.9)
snr.vec = exp(seq(log(0.05),log(6),length=4))
SIM.TYPE = "FL"
table.partI = matrix(NA, nrow=4, ncol=5)
row.names(table.partI) = c("low", "medium", "high-50", "high-100")
colnames(table.partI) = c("GD","CRI","CRI.Z","CAR","SIS")
problem = "lo"
n = 100; p = 10
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[1, ] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "med"
n = 500; p = 100
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[2, 2:5] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "hi5"
n = 50; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[3, 2:5] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
problem = "hi10"
n = 100; p = 1000
dat = load_simulation_data(n, p, type.vec, rho.vec, snr.vec, SIM.TYPE)
table.partI[4, 2:5] = (dat %>% group_by(method)%>% summarise(mean = round(mean(yvec), 4)))$mean
table.partI
setwd("G:/其他電腦/我的筆記型電腦/PhD/Journal Paper/CRI-feature-selection/RI variable selection/R")
library(diffr)
file1 = "G:/其他電腦/我的筆記型電腦/PhD/Journal Paper/CRI-feature-selection/best-subset-master_4090/bestsubset/R/fs.R"
file2 = "G:/其他電腦/我的筆記型電腦/PhD/Journal Paper/CRI-feature-selection/RI variable selection/R/fs_modified.R"
diffr(file1, file2, before = "f1", after = "f2")
file1 = "G:/其他電腦/我的筆記型電腦/PhD/Journal Paper/CRI-feature-selection/best-subset-master/bestsubset/R/fs.R"
file2 = "G:/其他電腦/我的筆記型電腦/PhD/Journal Paper/CRI-feature-selection/RI variable selection/R/fs_modified.R"
diffr(file1, file2, before = "f1", after = "f2")
